The ``0-add_integer`` module
======================

Using ``add_integer``
-------------------


Importing the module:
	>>> add_integer = __import__("0-add_integer").add_integer

Testing addition of int:
	>>> add_integer(3, 4)
	7

Adding with insufficient number of arguments:
	>>> add_integer(4)
	102

Adding with None argument:
	>>> add_integer(None)
	Traceback (most recent call last):
        ...
        TypeError: a must be an int

Adding with No argument:
	>>> add_integer()
	Traceback (most recent call last):
	...
	TypeError: add_integer() missing 1 required positional argument: 'a'

Adding with a as negative int:
	>>> add_integer(-1, 5)
	4

Adding with b as negative integer:
	>>> add_integer(5, -1)
	4

Adding two floats:
	>>> add_integer(12.5, 9.5)
	21

Adding one float and one int:
	>>> add_integer(12, 10.5)
	22

	>>> add_integer(10.5, 12)
	22

Adding Non integer or float types for second argument:
	>>> add_integer(5, "1")
	Traceback (most recent call last):
	...
	TypeError: b must be an integer

Adding Non integer or float types for first argument:
	>>> add_integer("9", 10)
	Traceback (most recent call last):
	...
	TypeError: a must be an integer

Adding super long int:
	 >>> add_integer(999999999999999999999999999999, 1)
	 1000000000000000000000000000000

Checking more than 2 args:
	 >>> add_integer(1, 2, 3)
         Traceback (most recent call last):
         ...
         TypeError: add_integer() takes from 1 to 2 positional arguments but 3 were given


Adding number with list:
	add_integer(5, [1, 5, 7, 12])
 	Traceback (most recent call last):
         ...
        TypeError: b must be an integer

Adding list with number:
	add_integer([1, 5, 7, 12], 5)
	Traceback (most recent call last):
        ...
        TypeError: a must be an integer

Adding list with list:
	>>> add_integer([1, 5, 7, 12], [1, 5, 7, 12])
	Traceback (most recent call last):
        ...
        TypeError: a must be an integer

Adding large float with an int:
	>>> add_integer(1.1292846023720374798146e19, 2)
	Traceback (most recent call last):
        ...
	ValueError: precision may be lost, a is large Float

Adding int to large float:
	>>> add_integer(2, 1.1292846023720374798146e20)
	Traceback (most recent call last):
        ...
	ValueError: precision may be lost, b is a large Float

Adding large float to large float:
	>>> add_integer(1.1292846023720374798146e21, 1.1292846023720374986e20)
        Traceback (most recent call last):
        ...
	ValueError: precision may be lost, a is large Float
